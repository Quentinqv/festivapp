generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model users {
  id         Int        @id @default(autoincrement())
  username   String     @unique(map: "username") @db.VarChar(50)
  email      String     @unique(map: "email") @db.VarChar(80)
  password   String     @db.VarChar(60)
  avatar     String     @db.Text
  role       users_role
  categories Json?
  createdAt  DateTime   @default(now()) @db.DateTime(0)
  updatedAt  DateTime   @default(now()) @db.DateTime(0)
  enabled    Boolean    @default(true)
  likes      likes[]
  posts      posts[]
}

model posts {
  id          Int      @id @default(autoincrement())
  userId      Int
  content     Json
  description String   @db.VarChar(255)
  createdAt   DateTime @default(now()) @db.DateTime(0)
  updatedAt   DateTime @default(now()) @db.DateTime(0)
  users       users    @relation(fields: [userId], references: [id], onUpdate: Restrict, map: "posts_ibfk_1")
  likes       likes[]
  nblike      nblike?

  @@index([userId], map: "userId")
}

model nblike {
  nb     Int
  postId Int   @id
  posts  posts @relation(fields: [postId], references: [id], onUpdate: Restrict, map: "nblike_ibfk_1")
}

model likes {
  userId Int
  postId Int
  posts  posts @relation(fields: [postId], references: [id], onUpdate: Restrict, map: "likes_ibfk_1")
  users  users @relation(fields: [userId], references: [id], onUpdate: Restrict, map: "likes_ibfk_2")

  @@id([userId, postId])
  @@index([postId], map: "postId")
}

enum users_role {
  admin
  personnal
  professional
  EMPTY_ENUM_VALUE @map("")
}
